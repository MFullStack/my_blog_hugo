<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Never Give Up</title>
    <link>http://118.24.78.115/posts/</link>
    <description>Recent content in Posts on Never Give Up</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 12 Sep 2019 14:02:57 +0800</lastBuildDate>
    
	<atom:link href="http://118.24.78.115/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proptypes</title>
      <link>http://118.24.78.115/posts/react/proptypes/</link>
      <pubDate>Thu, 12 Sep 2019 14:02:57 +0800</pubDate>
      
      <guid>http://118.24.78.115/posts/react/proptypes/</guid>
      <description>有状态组件与无状态组件 props 类型检查 有状态组件 import React, { PureComponent } from &amp;quot;react&amp;quot;; import PropTypes from &amp;quot;prop-types&amp;quot;; export default class Comment extends PureComponent { static propTypes = { comment: PropTypes.object.isRequired }; render() { const { author, content } = this.props.comment; return ( &amp;lt;div className=&amp;quot;comment-item&amp;quot;&amp;gt; &amp;lt;span className=&amp;quot;avatar&amp;quot; /&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;{author}&amp;lt;/a&amp;gt; &amp;lt;p&amp;gt;{content}&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; ); } } 无状态组件 import React from &amp;quot;react&amp;quot;; import PropTypes from &amp;quot;prop-types&amp;quot;; import CommentItem from &amp;quot;./CommentItem&amp;quot;; const CommentList = props =&amp;gt; { return ( &amp;lt;div className=&amp;quot;comment-list&amp;quot;&amp;gt; {props.comments.map(comment =&amp;gt; ( &amp;lt;CommentItem</description>
    </item>
    
    <item>
      <title>React Stateless Component</title>
      <link>http://118.24.78.115/posts/react/react-stateless-component/</link>
      <pubDate>Thu, 12 Sep 2019 10:47:29 +0800</pubDate>
      
      <guid>http://118.24.78.115/posts/react/react-stateless-component/</guid>
      <description>无状态组件 无状态组件的三种写法 import React from &amp;quot;react&amp;quot;; // 方式 1 const MesssageList = props =&amp;gt; { return ( &amp;lt;ul&amp;gt; {props.messages.map(msg =&amp;gt; ( &amp;lt;li&amp;gt;{msg}&amp;lt;/li&amp;gt; ))} &amp;lt;/ul&amp;gt; ); }; // 方式 2 function MesssageList(props){ return ( &amp;lt;ul&amp;gt; {props.messages.map(msg =&amp;gt; ( &amp;lt;li&amp;gt;{msg}&amp;lt;/li&amp;gt; ))} &amp;lt;/ul&amp;gt; ); }; // 方式 3 class MesssageList extends React.PureComponent { render() { return ( &amp;lt;ul&amp;gt; {this.props.messages.map(msg =&amp;gt; ( &amp;lt;li&amp;gt;{msg}&amp;lt;/li&amp;gt; ))} &amp;lt;/ul&amp;gt; ); } } export class ChatApp extends React.Component { state = { messages: [], inputmsg: &amp;quot;&amp;quot; }; handleInput = e =&amp;gt; { this.setState({</description>
    </item>
    
    <item>
      <title>课时 2 - Docker</title>
      <link>http://118.24.78.115/posts/cloud_native/docker/</link>
      <pubDate>Sat, 07 Sep 2019 13:46:19 +0800</pubDate>
      
      <guid>http://118.24.78.115/posts/cloud_native/docker/</guid>
      <description>一 、什么是容器 容器，是一个视图隔离、资源可限制、独立的文件系统的进程的集合。 资源视图隔离-namespace --如能看见部分进程：独立的主机名等 控制资源使用率-cgroup --2G 内存；CPU 个数 独立的文件</description>
    </item>
    
    <item>
      <title>课时 3 - Kubernetes 核心概念</title>
      <link>http://118.24.78.115/posts/cloud_native/kubernetes/</link>
      <pubDate>Wed, 04 Sep 2019 09:20:20 +0800</pubDate>
      
      <guid>http://118.24.78.115/posts/cloud_native/kubernetes/</guid>
      <description>什么是 Kubernetes 自动化的容器编排平台 部署 弹性 管理 核心功能： 服务的发现与负载均衡 容器的自动装箱 存储的编排 自动容器恢复 自动发布与回滚 配置与密文的管理 批量执行 水平伸缩 Kubernetes 的架构 典型的二层架构 Server-Client 架构 UI 和 CLI 命令只会与 Master 进</description>
    </item>
    
  </channel>
</rss>